# Proyect properties
# Elements filled by maven spring-boot-maven-plugin
app.name=@project.artifactId@
app.build-version=@project.version@

# Mandatory env-vars

# trello.key
# trello.token

# trello.work-board.id
# trello.work-board.name

# Business

trello.url=https://api.trello.com

trello.query-params={ 'key' : '${trello.key}' , 'token' : '${trello.token}' }

trello.members.me.boards.url=${trello.url}/1/members/me/boards?key=${trello.key}&token=${trello.token}&lists=all&labels=all&members=all
trello.boards.url=${trello.url}/1/boards/{id}?key=${trello.key}&token=${trello.token}&lists=all&labels=all&members=all
trello.cards.url=${trello.url}/1/cards
trello.lists.url=${trello.url}/1/lists
trello.labels.url=${trello.url}/1/labels

trello.new-label.color=blue

# Open Api doc

issue-resource.description=This represents a business feature that needs implementation, they will provide a short title and a description. All issues gets added to the `To Do` list as unassigned
bug-resource.description=This represents a problem that needs fixing. They will only provide a description, the title needs to be randomized with the following pattern: `bug-{word}-{number}`. It doesn't matter that they repeat internally. The bugs should be assigned to a random member of the board and have the `Bug` label
task-resource.description=This represents some manual work that needs to be done. It will count with just a title and a category (`Maintenance`, `Research`, or `Test`) each corresponding to a label in trello

generic-resource.description= \
 Behaviour determined by the `type` attribute:\n \
  - An **issue**: ${issue-resource.description}\n \
  - A **bug**: ${bug-resource.description}\n \
  - A **task**: ${task-resource.description}